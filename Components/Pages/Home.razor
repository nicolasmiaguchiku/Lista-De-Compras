@page "/"
@rendermode InteractiveServer
@inject IListaInterface listaServices
@inject NavigationManager NavigationManager


@using System.Globalization

<PageTitle>Lista De Compras</PageTitle>

<h1>Lista De Compras</h1>

@if (products.Count > 0)
{
    <div class="row">
        <div class="col-md-2">
            <form @onsubmit="ApplyFilter">
                <div class="mb-3">
                    <label class="form-label">Filtro</label>
                    <select class="form-select" @bind="filter.FilterString">
                        @foreach (var category in Enum.GetValues(typeof(FilterCategory)))
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Filtrar</button>
                <button type="button" class="btn btn-primary" @onclick="ClearFilter">Limpar</button>
            </form>
        </div>
        <div class="col-md-10">
            <table class="table table-striped" style="text-align: center">
                <thead>
                    <tr>
                        <th>Produto</th>
                        <th>Valor</th>
                        <th>Categoria</th>
                        <th>Link</th>
                        <th>Comprado</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in products)
                    {
                        <tr style="cursor: pointer;" class="@(product.Bought ? "table-success" : "")">
                            <td>@product.Name</td>
                            <td>@FormatPrice((decimal)product.Price)</td>
                            <td>@product.Category</td>
                            <td>
                                <a class="btn btn-link" href="@product.Link" target="_blank">Clique aqui</a>
                            </td>
                            <td>
                                @(product.Bought ? "Sim" : "Não")
                            </td>
                            <td>
                                <button class="btn btn-success" @onclick="() => EditProduct(product.Id)">Editar</button>
                                <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Excluir</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <a href="AddProduto" class="btn btn-success">Adicionar produto</a>
        </div>
    </div>
}
else
{
    <p>Nenhum produto encontrado</p>
    <a href="AddProduto" class="btn btn-success">Adicionar produto</a>
}


@code
{
    private Filter filter = new Filter { FilterString = "Todos" };

    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await listaServices.GetProductsByCategoryAsync(filter.FilterString);
    }

    private async Task ApplyFilter()
    {
        products = await listaServices.GetProductsByCategoryAsync(filter.FilterString);
    }

    private async Task ClearFilter()
    {
        filter.FilterString = "Todos";
        products = await listaServices.GetAllProductsAsync();
    }


    private string FormatPrice(decimal price)
    {
        return price.ToString("N2", new CultureInfo("pt-BR"));
    }


    public async Task DeleteProduct(int id)
    {
        await listaServices.DeleteProductAsync(id);
        products = await listaServices.GetProductsByCategoryAsync(filter.FilterString);
    }


    public void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/EditProduct/{id}");
    }
}